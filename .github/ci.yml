name: Oscars-workflow

on:
  push:
    branches: [main]
  pull_request: 
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: action/checkout@v2

      - name: Python set up
        uses: action/setup-python@v2
        with: 
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest app/test_app.py

  Artifact:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
      - uses: action/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login into Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 195275674689.dkr.ecr.us-east-2.amazonaws.com

      - name: Docker-compose build
        run: |
          docker-compose build

      - name: Push flask image to ECR
        run: |
          docker tag flask-app:latest 195275674689.dkr.ecr.us-east-2.amazonaws.com/teacher-student-hub
          docker push 195275674689.dkr.ecr.us-east-2.amazonaws.com/teacher-student-hub

      - name: Push nginx image to ECR
        run: |
          docker tag nginx-proxy:latest 195275674689.dkr.ecr.us-east-2.amazonaws.com/teacher-student-hub
          docker push 195275674689.dkr.ecr.us-east-2.amazonaws.com/teacher-student-hub

  deploy-to-ecs:
    name: Deploy to ECS Fargate
    needs: Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Fill in new image ID in ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-definition.json
          container-name: flask-app
          image: ${{ steps.login-ecr.outputs.registry }}/teacher-student-hub

      - name: Fill in new image ID in ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-definition.json
          container-name: flask-app
          image: ${{ steps.login-ecr.outputs.registry }}/teacher-student-hub

      - name: Deploy to ECS Fargate
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: teacher-student-cluster-1
          service: teacher-student-service
          task-definition: ${{ steps.task-def.outputs.task-definition }}



